/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AuthenticatedRouteRouteImport } from './routes/_authenticated/route'
import { Route as AuthenticatedCategoryRouteImport } from './routes/_authenticated/category'
import { Route as errors503RouteImport } from './routes/(errors)/503'
import { Route as errors500RouteImport } from './routes/(errors)/500'
import { Route as errors404RouteImport } from './routes/(errors)/404'
import { Route as errors403RouteImport } from './routes/(errors)/403'
import { Route as errors401RouteImport } from './routes/(errors)/401'
import { Route as authSignInRouteImport } from './routes/(auth)/sign-in'
import { Route as AuthenticatedAssetsIndexRouteImport } from './routes/_authenticated/assets/index'
import { Route as AuthenticatedErrorsErrorRouteImport } from './routes/_authenticated/errors/$error'
import { Route as AuthenticatedAssetsDetailsDetailsRouteImport } from './routes/_authenticated/assets/details/details'
import { Route as AuthenticatedAssetsCgDetailsRouteImport } from './routes/_authenticated/assets/cg/details'

const AuthenticatedRouteRoute = AuthenticatedRouteRouteImport.update({
  id: '/_authenticated',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedCategoryRoute = AuthenticatedCategoryRouteImport.update({
  id: '/category',
  path: '/category',
  getParentRoute: () => AuthenticatedRouteRoute,
} as any)
const errors503Route = errors503RouteImport.update({
  id: '/(errors)/503',
  path: '/503',
  getParentRoute: () => rootRouteImport,
} as any)
const errors500Route = errors500RouteImport.update({
  id: '/(errors)/500',
  path: '/500',
  getParentRoute: () => rootRouteImport,
} as any)
const errors404Route = errors404RouteImport.update({
  id: '/(errors)/404',
  path: '/404',
  getParentRoute: () => rootRouteImport,
} as any)
const errors403Route = errors403RouteImport.update({
  id: '/(errors)/403',
  path: '/403',
  getParentRoute: () => rootRouteImport,
} as any)
const errors401Route = errors401RouteImport.update({
  id: '/(errors)/401',
  path: '/401',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignInRoute = authSignInRouteImport.update({
  id: '/(auth)/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthenticatedAssetsIndexRoute =
  AuthenticatedAssetsIndexRouteImport.update({
    id: '/assets/',
    path: '/assets/',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedErrorsErrorRoute =
  AuthenticatedErrorsErrorRouteImport.update({
    id: '/errors/$error',
    path: '/errors/$error',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAssetsDetailsDetailsRoute =
  AuthenticatedAssetsDetailsDetailsRouteImport.update({
    id: '/assets/details/details',
    path: '/assets/details/details',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)
const AuthenticatedAssetsCgDetailsRoute =
  AuthenticatedAssetsCgDetailsRouteImport.update({
    id: '/assets/cg/details',
    path: '/assets/cg/details',
    getParentRoute: () => AuthenticatedRouteRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/category': typeof AuthenticatedCategoryRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/assets': typeof AuthenticatedAssetsIndexRoute
  '/assets/cg/details': typeof AuthenticatedAssetsCgDetailsRoute
  '/assets/details/details': typeof AuthenticatedAssetsDetailsDetailsRoute
}
export interface FileRoutesByTo {
  '/sign-in': typeof authSignInRoute
  '/401': typeof errors401Route
  '/403': typeof errors403Route
  '/404': typeof errors404Route
  '/500': typeof errors500Route
  '/503': typeof errors503Route
  '/category': typeof AuthenticatedCategoryRoute
  '/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/assets': typeof AuthenticatedAssetsIndexRoute
  '/assets/cg/details': typeof AuthenticatedAssetsCgDetailsRoute
  '/assets/details/details': typeof AuthenticatedAssetsDetailsDetailsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/_authenticated': typeof AuthenticatedRouteRouteWithChildren
  '/(auth)/sign-in': typeof authSignInRoute
  '/(errors)/401': typeof errors401Route
  '/(errors)/403': typeof errors403Route
  '/(errors)/404': typeof errors404Route
  '/(errors)/500': typeof errors500Route
  '/(errors)/503': typeof errors503Route
  '/_authenticated/category': typeof AuthenticatedCategoryRoute
  '/_authenticated/errors/$error': typeof AuthenticatedErrorsErrorRoute
  '/_authenticated/assets/': typeof AuthenticatedAssetsIndexRoute
  '/_authenticated/assets/cg/details': typeof AuthenticatedAssetsCgDetailsRoute
  '/_authenticated/assets/details/details': typeof AuthenticatedAssetsDetailsDetailsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/category'
    | '/errors/$error'
    | '/assets'
    | '/assets/cg/details'
    | '/assets/details/details'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/sign-in'
    | '/401'
    | '/403'
    | '/404'
    | '/500'
    | '/503'
    | '/category'
    | '/errors/$error'
    | '/assets'
    | '/assets/cg/details'
    | '/assets/details/details'
  id:
    | '__root__'
    | '/_authenticated'
    | '/(auth)/sign-in'
    | '/(errors)/401'
    | '/(errors)/403'
    | '/(errors)/404'
    | '/(errors)/500'
    | '/(errors)/503'
    | '/_authenticated/category'
    | '/_authenticated/errors/$error'
    | '/_authenticated/assets/'
    | '/_authenticated/assets/cg/details'
    | '/_authenticated/assets/details/details'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  AuthenticatedRouteRoute: typeof AuthenticatedRouteRouteWithChildren
  authSignInRoute: typeof authSignInRoute
  errors401Route: typeof errors401Route
  errors403Route: typeof errors403Route
  errors404Route: typeof errors404Route
  errors500Route: typeof errors500Route
  errors503Route: typeof errors503Route
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_authenticated': {
      id: '/_authenticated'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthenticatedRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/category': {
      id: '/_authenticated/category'
      path: '/category'
      fullPath: '/category'
      preLoaderRoute: typeof AuthenticatedCategoryRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/(errors)/503': {
      id: '/(errors)/503'
      path: '/503'
      fullPath: '/503'
      preLoaderRoute: typeof errors503RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/500': {
      id: '/(errors)/500'
      path: '/500'
      fullPath: '/500'
      preLoaderRoute: typeof errors500RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/404': {
      id: '/(errors)/404'
      path: '/404'
      fullPath: '/404'
      preLoaderRoute: typeof errors404RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/403': {
      id: '/(errors)/403'
      path: '/403'
      fullPath: '/403'
      preLoaderRoute: typeof errors403RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(errors)/401': {
      id: '/(errors)/401'
      path: '/401'
      fullPath: '/401'
      preLoaderRoute: typeof errors401RouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/sign-in': {
      id: '/(auth)/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof authSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_authenticated/assets/': {
      id: '/_authenticated/assets/'
      path: '/assets'
      fullPath: '/assets'
      preLoaderRoute: typeof AuthenticatedAssetsIndexRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/errors/$error': {
      id: '/_authenticated/errors/$error'
      path: '/errors/$error'
      fullPath: '/errors/$error'
      preLoaderRoute: typeof AuthenticatedErrorsErrorRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assets/details/details': {
      id: '/_authenticated/assets/details/details'
      path: '/assets/details/details'
      fullPath: '/assets/details/details'
      preLoaderRoute: typeof AuthenticatedAssetsDetailsDetailsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
    '/_authenticated/assets/cg/details': {
      id: '/_authenticated/assets/cg/details'
      path: '/assets/cg/details'
      fullPath: '/assets/cg/details'
      preLoaderRoute: typeof AuthenticatedAssetsCgDetailsRouteImport
      parentRoute: typeof AuthenticatedRouteRoute
    }
  }
}

interface AuthenticatedRouteRouteChildren {
  AuthenticatedCategoryRoute: typeof AuthenticatedCategoryRoute
  AuthenticatedErrorsErrorRoute: typeof AuthenticatedErrorsErrorRoute
  AuthenticatedAssetsIndexRoute: typeof AuthenticatedAssetsIndexRoute
  AuthenticatedAssetsCgDetailsRoute: typeof AuthenticatedAssetsCgDetailsRoute
  AuthenticatedAssetsDetailsDetailsRoute: typeof AuthenticatedAssetsDetailsDetailsRoute
}

const AuthenticatedRouteRouteChildren: AuthenticatedRouteRouteChildren = {
  AuthenticatedCategoryRoute: AuthenticatedCategoryRoute,
  AuthenticatedErrorsErrorRoute: AuthenticatedErrorsErrorRoute,
  AuthenticatedAssetsIndexRoute: AuthenticatedAssetsIndexRoute,
  AuthenticatedAssetsCgDetailsRoute: AuthenticatedAssetsCgDetailsRoute,
  AuthenticatedAssetsDetailsDetailsRoute:
    AuthenticatedAssetsDetailsDetailsRoute,
}

const AuthenticatedRouteRouteWithChildren =
  AuthenticatedRouteRoute._addFileChildren(AuthenticatedRouteRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  AuthenticatedRouteRoute: AuthenticatedRouteRouteWithChildren,
  authSignInRoute: authSignInRoute,
  errors401Route: errors401Route,
  errors403Route: errors403Route,
  errors404Route: errors404Route,
  errors500Route: errors500Route,
  errors503Route: errors503Route,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
